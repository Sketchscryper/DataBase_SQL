-- Задание 1. Создайте следующие запросы для базы данных с информацией об овощах и фруктах из предыдущего 
-- домашнего задания:
-- ■ Отображение всех овощей с калорийностью меньше, указанной калорийности;
-- ■ Отображение всех фруктов с калорийностью в указанном диапазоне;
-- ■ Отображение всех овощей в названии, которых есть указанное слово. Например, слово: капуста;
-- ■ Отображение всех овощей и фруктов в кратком описании, которых есть указанное слово. Например, слово: гемоглобин;
-- ■ Показать все овощи и фрукты, у которых цвет желтый или красный.

-- Создаем базу данных
CREATE DATABASE Products;
USE Products;

-- Создаем таблицу
CREATE TABLE products (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    sort ENUM('овощ', 'фрукт') NOT NULL,
    color VARCHAR(50) NOT NULL,
    calories INT NOT NULL,
    description TEXT
);

-- Добавляем тестовые данные
INSERT INTO products (name, sort, color, calories, description) VALUES
('Яблоко', 'фрукт', 'красный', 52, 'Сладкий фрукт'),
('Банан', 'фрукт', 'желтый', 89, 'Энергетический фрукт'),
('Апельсин', 'фрукт', 'оранжевый', 47, 'Цитрусовый фрукт'),
('Морковь', 'овощ', 'оранжевый', 41, 'Овощ для зрения'),
('Огурец', 'овощ', 'зеленый', 15, 'Сочный овощ'),
('Помидор', 'овощ', 'красный', 18, 'Популярный овощ'),
('Брокколи', 'овощ', 'зеленый', 34, 'Полезный овощ'),
('Виноград', 'фрукт', 'фиолетовый', 69, 'Сладкие ягоды');

-- Выполняем запросы 
-- Отображение всех овощей с калорийностью меньше, указанной калорийности
SELECT * FROM products 
WHERE sort = 'овощ' AND calories < 30;

-- Отображение всех фруктов с калорийностью в указанном диапазоне
SELECT * FROM products 
WHERE sort = 'фрукт' AND calories BETWEEN 40 AND 70;

-- Отображение всех овощей в названии, которых есть указанное слово. Например, слово: капуста;
SELECT * FROM products 
WHERE sort = 'овощ' AND name LIKE '%капуста%';

-- Отображение всех овощей и фруктов в кратком описании, которых есть указанное слово. Например, слово: гемоглобин;
SELECT * FROM products 
WHERE description LIKE '%гемоглобин%';

-- Показать все овощи и фрукты, у которых цвет желтый или красный
SELECT * FROM products 
WHERE color IN ('желтый', 'красный');

-- Задание 2. Создайте следующие запросы для базы данных с информацией об овощах и фруктах из предыдущего 
-- домашнего задания:
-- ■ Показать количество овощей;
-- ■ Показать количество фруктов;
-- ■ Показать количество овощей и фруктов заданного цвета;
-- ■ Показать количество овощей и фруктов каждого цвета;
-- ■ Показать цвет с минимальным количеством овощей и фруктов;
-- ■ Показать цвет с максимальным количеством овощей и фруктов;
-- ■ Показать минимальную калорийность овощей и фруктов;
-- ■ Показать максимальную калорийность овощей и фруктов;
-- ■ Показать среднюю калорийность овощей и фруктов;
-- ■ Показать фрукт с минимальной калорийностью;
-- ■ Показать фрукт с максимальной калорийностью.

-- Создаем базу данных
CREATE DATABASE Products;
USE Products;

-- Создаем таблицу
CREATE TABLE products (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    sort ENUM('овощ', 'фрукт') NOT NULL,
    color VARCHAR(50) NOT NULL,
    calories INT NOT NULL,
    description TEXT
);

-- Добавляем тестовые данные
INSERT INTO products (name, sort, color, calories, description) VALUES
('Яблоко', 'фрукт', 'красный', 52, 'Сладкий фрукт'),
('Банан', 'фрукт', 'желтый', 89, 'Энергетический фрукт'),
('Апельсин', 'фрукт', 'оранжевый', 47, 'Цитрусовый фрукт'),
('Морковь', 'овощ', 'оранжевый', 41, 'Овощ для зрения'),
('Огурец', 'овощ', 'зеленый', 15, 'Сочный овощ'),
('Помидор', 'овощ', 'красный', 18, 'Популярный овощ'),
('Брокколи', 'овощ', 'зеленый', 34, 'Полезный овощ'),
('Виноград', 'фрукт', 'фиолетовый', 69, 'Сладкие ягоды');

-- Выполняем запросы 
-- Показать количество овощей
SELECT COUNT(*) AS количество_овощей 
FROM products 
WHERE sort = 'овощ';

-- Показать количество фруктов
SELECT COUNT(*) AS количество_фруктов 
FROM products 
WHERE sort = 'фрукт';

-- Показать количество овощей и фруктов заданного цвета
SELECT COUNT(*) AS количество 
FROM products 
WHERE color = 'зеленый';

-- Показать количество овощей и фруктов каждого цвета
SELECT color, COUNT(*) AS количество 
FROM products 
GROUP BY color 
ORDER BY количество DESC;

-- Показать цвет с минимальным количеством овощей и фруктов
SELECT color, COUNT(*) AS количество 
FROM products 
GROUP BY color 
ORDER BY количество ASC 
LIMIT 1;

-- Показать цвет с максимальным количеством овощей и фруктов
SELECT color, COUNT(*) AS количество 
FROM products 
GROUP BY color 
ORDER BY количество DESC 
LIMIT 1;

-- Показать минимальную калорийность овощей и фруктов
SELECT MIN(calories) AS минимальная_калорийность 
FROM products;

-- Показать максимальную калорийность овощей и фруктов
SELECT MAX(calories) AS максимальная_калорийность 
FROM products;

-- Показать среднюю калорийность овощей и фруктов
SELECT AVG(calories) AS средняя_калорийность 
FROM products;

-- Показать фрукт с минимальной калорийностью
SELECT * FROM products 
WHERE sort = 'фрукт' 
ORDER BY calories ASC 
LIMIT 1;

-- Показать фрукт с максимальной калорийностью
SELECT * FROM products 
WHERE sort = 'фрукт' 
ORDER BY calories DESC 
LIMIT 1;
